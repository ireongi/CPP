12/20(화) 소멸자, 배열

- Destructors 소멸자
  앞에 tilde '~' 를 붙임, 리턴값 x void도 안됨
  지역변수와 같이 해당 메서드가 끝나면 소멸되는 것
  해당 scope 벗어나는 순간 만든 개수만큼 반드시 다 소멸됨
  메인함수의 외부 or 내부에서 생성 가능
  나중에 들어온 것이 먼저 소멸됨 & 스택메모리 & pop되는 것
  -> java에서는 가비지컬렉터가 수행해줌, so C++은 메모리 컨트롤 가능한 언어임
  -> this 넣으면 메모리 주소 알수있음

- Static
  객체 생성 없이 사용, class 안에서 모든 객체가 공유 가능, 클래스 멤버변수라고도 함
  ex) 인하대학교라는 소속은 static 학점은 instance;
  ex) 클래스명::정적메서드();
  
- Separate Files
  헤더(필요한 정의부분, #pragma once(#ifndef 헤더파일 대문자 + #define 헤더파일 대문자)를 사용해
      여러번 사용할 경우 중복오류 안 되도록 해줌)
  구현(circle을 만듦)
  어플리케이션(테스트 함수)으로 나눠 만들기
  
- 배열
  개념 : 하나의 변수명을 가진, 인덱스 값을 가진 여러 공간에 저장하기(연속적 메모리) 패드 메모 참고
  
- reference pointer(별명)
  한 번 부여한 별명은 변경 불가 but 원본에 대입하는건 가능
  별명에 정수값 불가 but const가 붙으면 가능해짐(읽기 전용)
  ex) int num = 100;   <- & rNum1이 별명임, 원본 바꾸려면 Num1 = 1; 이런식으로 가능
      & rNum1 = num;
      $ rNum2 = num;

- Pointer
  ex)택배 아저씨가 내 주소 가지고 배달해줄때의 택배 기사님이 포인터 역할임
  화살표로 클래스의 멤버변수에 접근 가능
  this -> radius = radius;
  &를 붙이면 메모리 주소를 볼수있다
